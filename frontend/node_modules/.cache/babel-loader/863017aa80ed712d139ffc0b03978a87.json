{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakes\\\\Documents\\\\semester 7\\\\To-Do\\\\frontend\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\";\nimport Login from \"./components/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst coder = require(\"../coder\");\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentUser: \"\",\n      popup: messages.none,\n      loggedIn: true\n    };\n\n    this.componentDidMount = async () => {\n      //localStorage.clear();\n      const username = localStorage.getItem(\"user\");\n      if (username === null) this.setState({\n        loggedIn: false\n      });else this.updateCurrentUser(username);\n    };\n\n    this.maxId = () => {\n      return this.state.tasks.reduce((max, character) => character.id > max ? character.id : max, 0);\n    };\n\n    this.handleAdd = async text => {\n      if (text) {\n        const tasks = [...this.state.tasks];\n        const newTask = {\n          id: this.maxId() + 1,\n          description: text,\n          checked: false\n        };\n        tasks.push(newTask);\n        await Axios.post(\"http://localhost:3001/api/add\", {\n          task: newTask,\n          username: this.state.currentUser\n        });\n        this.setState({\n          tasks\n        });\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        popup: messages.reset\n      });\n    };\n\n    this.reset = async () => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        t.checked = false;\n      });\n      await Axios.put(\"http://localhost:3001/api/reset\", {\n        username: this.state.currentUser\n      });\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleDeleteDone = () => {\n      this.setState({\n        popup: messages.deleteDone\n      });\n    };\n\n    this.deleteDone = async () => {\n      const tasks = this.state.tasks.filter(t => !t.checked);\n      await Axios.delete(\"http://localhost:3001/api/deleteDone\", {\n        data: {\n          username: this.state.currentUser\n        }\n      });\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        popup: messages.clear\n      });\n    };\n\n    this.clear = async () => {\n      await Axios.delete(\"http://localhost:3001/api/clear\", {\n        data: {\n          username: this.state.currentUser\n        }\n      });\n      this.setState({\n        tasks: [],\n        popup: messages.none\n      });\n    };\n\n    this.handleDelete = async id => {\n      const tasks = this.state.tasks.filter(t => t.id !== id);\n      await Axios.delete(\"http://localhost:3001/api/delete\", {\n        data: {\n          id: id\n        }\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handleToggle = async id => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        if (t.id === id) t.checked = !t.checked;\n      });\n      await Axios.put(\"http://localhost:3001/api/toggle\", {\n        id: id\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handlePopupCancle = () => {\n      this.setState({\n        popup: messages.none\n      });\n    };\n\n    this.handleYes = () => {\n      switch (this.state.popup) {\n        case messages.reset:\n          this.reset();\n          break;\n\n        case messages.deleteDone:\n          this.deleteDone();\n          break;\n\n        case messages.clear:\n          this.clear();\n          break;\n\n        case messages.logout:\n          this.logout();\n          break;\n      }\n    };\n\n    this.updateCurrentUser = async username => {\n      await Axios.get(\"http://localhost:3001/api/get\", {\n        params: {\n          username: username\n        }\n      }).then(response => {\n        this.setState({\n          tasks: response.data,\n          currentUser: username,\n          loggedIn: true\n        });\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        popup: messages.logout\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        tasks: [],\n        currentUser: \"\",\n        popup: messages.none,\n        loggedIn: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        show: !this.state.loggedIn,\n        onLogin: this.updateCurrentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        type: this.state.popup,\n        onCancel: this.handlePopupCancle,\n        onYes: this.handleYes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        inactive: this.state.popup.length > 0 || !this.state.loggedIn,\n        numTasks: this.state.tasks.length,\n        numDoneTasks: this.state.tasks.filter(t => t.checked).length,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset,\n        onDeleteDone: this.handleDeleteDone,\n        onClear: this.handleClear,\n        onLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: this.state.tasks,\n        onDelete: this.handleDelete,\n        onToggle: this.handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jakes/Documents/semester 7/To-Do/frontend/src/App.tsx"],"names":["React","Axios","Tasks","NavBar","Popup","messages","Login","coder","require","App","Component","state","tasks","currentUser","popup","none","loggedIn","componentDidMount","username","localStorage","getItem","setState","updateCurrentUser","maxId","reduce","max","character","id","handleAdd","text","newTask","description","checked","push","post","task","handleReset","reset","forEach","t","put","handleDeleteDone","deleteDone","filter","delete","data","handleClear","clear","handleDelete","handleToggle","handlePopupCancle","handleYes","logout","get","params","then","response","handleLogout","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport { TaskTemplate } from \"./components/task\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\";\nimport Login from \"./components/login\";\n\nconst coder = require(\"../coder\");\n\ninterface AppState {\n    tasks: TaskTemplate[];\n    currentUser: string;\n    popup: messages;\n    loggedIn: boolean;\n}\n\nclass App extends React.Component {\n    state: AppState = {\n        tasks: [],\n        currentUser: \"\",\n        popup: messages.none,\n        loggedIn: true,\n    };\n\n    componentDidMount = async () => {\n        //localStorage.clear();\n        const username = localStorage.getItem(\"user\");\n        if (username === null) this.setState({ loggedIn: false });\n        else this.updateCurrentUser(username);\n    };\n\n    maxId = (): number => {\n        return this.state.tasks.reduce(\n            (max, character) => (character.id > max ? character.id : max),\n            0\n        );\n    };\n\n    handleAdd = async (text: string) => {\n        if (text) {\n            const tasks = [...this.state.tasks];\n            const newTask: TaskTemplate = {\n                id: this.maxId() + 1,\n                description: text,\n                checked: false,\n            };\n            tasks.push(newTask);\n            await Axios.post(\"http://localhost:3001/api/add\", {\n                task: newTask,\n                username: this.state.currentUser,\n            });\n            this.setState({ tasks });\n        }\n    };\n\n    handleReset = (): void => {\n        this.setState({\n            popup: messages.reset,\n        });\n    };\n\n    reset = async () => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            t.checked = false;\n        });\n        await Axios.put(\"http://localhost:3001/api/reset\", {\n            username: this.state.currentUser,\n        });\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleDeleteDone = (): void => {\n        this.setState({\n            popup: messages.deleteDone,\n        });\n    };\n\n    deleteDone = async () => {\n        const tasks = this.state.tasks.filter(t => !t.checked);\n        await Axios.delete(\"http://localhost:3001/api/deleteDone\", {\n            data: { username: this.state.currentUser },\n        });\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleClear = (): void => {\n        this.setState({\n            popup: messages.clear,\n        });\n    };\n\n    clear = async () => {\n        await Axios.delete(\"http://localhost:3001/api/clear\", {\n            data: { username: this.state.currentUser },\n        });\n        this.setState({ tasks: [], popup: messages.none });\n    };\n\n    handleDelete = async (id: number) => {\n        const tasks = this.state.tasks.filter(t => t.id !== id);\n        await Axios.delete(\"http://localhost:3001/api/delete\", {\n            data: { id: id },\n        });\n        this.setState({ tasks });\n    };\n\n    handleToggle = async (id: number) => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            if (t.id === id) t.checked = !t.checked;\n        });\n        await Axios.put(\"http://localhost:3001/api/toggle\", { id: id });\n        this.setState({ tasks });\n    };\n\n    handlePopupCancle = (): void => {\n        this.setState({ popup: messages.none });\n    };\n\n    handleYes = (): void => {\n        switch (this.state.popup) {\n            case messages.reset:\n                this.reset();\n                break;\n            case messages.deleteDone:\n                this.deleteDone();\n                break;\n            case messages.clear:\n                this.clear();\n                break;\n            case messages.logout:\n                this.logout();\n                break;\n        }\n    };\n\n    updateCurrentUser = async (username: string) => {\n        await Axios.get(\"http://localhost:3001/api/get\", {\n            params: { username: username },\n        }).then(response => {\n            this.setState({\n                tasks: response.data,\n                currentUser: username,\n                loggedIn: true,\n            });\n        });\n    };\n\n    handleLogout = (): void => {\n        this.setState({\n            popup: messages.logout,\n        });\n    };\n\n    logout = (): void => {\n        localStorage.clear();\n        this.setState({\n            tasks: [],\n            currentUser: \"\",\n            popup: messages.none,\n            loggedIn: false,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Login\n                    show={!this.state.loggedIn}\n                    onLogin={this.updateCurrentUser}\n                ></Login>\n                <Popup\n                    type={this.state.popup}\n                    onCancel={this.handlePopupCancle}\n                    onYes={this.handleYes}\n                ></Popup>\n                <NavBar\n                    inactive={\n                        this.state.popup.length > 0 || !this.state.loggedIn\n                    }\n                    numTasks={this.state.tasks.length}\n                    numDoneTasks={\n                        this.state.tasks.filter(t => t.checked).length\n                    }\n                    onAdd={this.handleAdd}\n                    onReset={this.handleReset}\n                    onDeleteDone={this.handleDeleteDone}\n                    onClear={this.handleClear}\n                    onLogout={this.handleLogout}\n                />\n                <Tasks\n                    tasks={this.state.tasks}\n                    onDelete={this.handleDelete}\n                    onToggle={this.handleToggle}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}