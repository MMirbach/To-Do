{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakes\\\\Documents\\\\vscodeProjects\\\\To-Do\\\\frontend\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./styles/App.css\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentText: \"\"\n    };\n\n    this.maxId = () => {\n      return this.state.tasks.reduce((max, character) => character.id > max ? character.id : max, 0);\n    };\n\n    this.handleText = currentText => {\n      this.setState({\n        currentText\n      });\n    };\n\n    this.handleAdd = () => {\n      if (this.state.currentText) {\n        console.log(\"ggg\");\n        const tasks = [...this.state.tasks];\n        const newTask = {\n          id: this.maxId() + 1,\n          description: this.state.currentText,\n          checked: false\n        };\n        tasks.push(newTask);\n        this.setState({\n          tasks: tasks,\n          currentText: \"\"\n        });\n      } else {\n        console.log(\"fff\");\n      }\n    };\n\n    this.handleReset = () => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        t.checked = false;\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handleDeleteDone = () => {\n      const tasks = this.state.tasks.filter(t => !t.checked);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        tasks: []\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        value: this.state.currentText,\n        numTasks: this.state.tasks.length,\n        numDoneTasks: this.state.tasks.filter(t => t.checked).length,\n        onText: this.handleText,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset,\n        onDeleteDone: this.handleDeleteDone,\n        onClear: this.handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: [{\n          id: 1,\n          description: \"hi\",\n          checked: false\n        }, {\n          id: 2,\n          description: \"there\",\n          checked: false\n        }],\n        onToggle: () => {},\n        onDelete: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jakes/Documents/vscodeProjects/To-Do/frontend/src/App.tsx"],"names":["React","Tasks","NavBar","App","Component","state","tasks","currentText","maxId","reduce","max","character","id","handleText","setState","handleAdd","console","log","newTask","description","checked","push","handleReset","forEach","t","handleDeleteDone","filter","handleClear","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/App.css\";\nimport { taskTemplate } from \"./components/task\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\n\ninterface AppState {\n    tasks: taskTemplate[];\n    currentText: string;\n}\n\nclass App extends React.Component {\n    state: AppState = { tasks: [], currentText: \"\" };\n\n    maxId = (): number => {\n        return this.state.tasks.reduce(\n            (max, character) => (character.id > max ? character.id : max),\n            0\n        );\n    };\n\n    handleText = (currentText: string): void => {\n        this.setState({ currentText });\n    };\n\n    handleAdd = (): void => {\n        if (this.state.currentText) {\n            console.log(\"ggg\");\n            const tasks = [...this.state.tasks];\n            const newTask: taskTemplate = {\n                id: this.maxId() + 1,\n                description: this.state.currentText,\n                checked: false,\n            };\n            tasks.push(newTask);\n            this.setState({ tasks: tasks, currentText: \"\" });\n        } else {\n            console.log(\"fff\");\n        }\n    };\n\n    handleReset = (): void => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            t.checked = false;\n        });\n        this.setState({ tasks });\n    };\n\n    handleDeleteDone = (): void => {\n        const tasks = this.state.tasks.filter(t => !t.checked);\n        this.setState({ tasks });\n    };\n\n    handleClear = (): void => {\n        this.setState({ tasks: [] });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar\n                    value={this.state.currentText}\n                    numTasks={this.state.tasks.length}\n                    numDoneTasks={\n                        this.state.tasks.filter(t => t.checked).length\n                    }\n                    onText={this.handleText}\n                    onAdd={this.handleAdd}\n                    onReset={this.handleReset}\n                    onDeleteDone={this.handleDeleteDone}\n                    onClear={this.handleClear}\n                />\n                <Tasks\n                    tasks={[\n                        { id: 1, description: \"hi\", checked: false },\n                        { id: 2, description: \"there\", checked: false },\n                    ]}\n                    onToggle={() => {}}\n                    onDelete={() => {}}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}