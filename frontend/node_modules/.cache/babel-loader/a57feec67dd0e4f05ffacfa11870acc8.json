{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakes\\\\Documents\\\\semester 7\\\\To-Do\\\\frontend\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\";\nimport Login from \"./components/login\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      popup: messages.none,\n      login: true\n    };\n\n    this.componentDidMount = () => {\n      const username = localStorage.getItem(\"user\");\n\n      if (username === \"admin\") {\n        Axios.get(\"http://localhost:3001/api/get\").then(response => {\n          this.setState({\n            tasks: response.data\n          });\n        });\n      }\n    };\n\n    this.maxId = () => {\n      return this.state.tasks.reduce((max, character) => character.id > max ? character.id : max, 0);\n    };\n\n    this.handleAdd = async text => {\n      if (text) {\n        const tasks = [...this.state.tasks];\n        const newTask = {\n          id: this.maxId() + 1,\n          description: text,\n          checked: false\n        };\n        tasks.push(newTask);\n        await Axios.post(\"http://localhost:3001/api/add\", newTask);\n        this.setState({\n          tasks\n        });\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        popup: messages.reset\n      });\n    };\n\n    this.reset = async () => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        t.checked = false;\n      });\n      await Axios.put(\"http://localhost:3001/api/reset\");\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleDeleteDone = () => {\n      this.setState({\n        popup: messages.deleteDone\n      });\n    };\n\n    this.deleteDone = async () => {\n      const tasks = this.state.tasks.filter(t => !t.checked);\n      await Axios.delete(\"http://localhost:3001/api/deleteDone\");\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        popup: messages.clear\n      });\n    };\n\n    this.clear = async () => {\n      await Axios.delete(\"http://localhost:3001/api/clear\");\n      this.setState({\n        tasks: [],\n        popup: messages.none\n      });\n    };\n\n    this.handleDelete = async id => {\n      const tasks = this.state.tasks.filter(t => t.id !== id);\n      await Axios.delete(\"http://localhost:3001/api/delete\", {\n        data: {\n          id: id\n        }\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handleToggle = async id => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        if (t.id === id) t.checked = !t.checked;\n      });\n      await Axios.put(\"http://localhost:3001/api/toggle\", {\n        id: id\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handlePopupCancle = () => {\n      this.setState({\n        popup: messages.none\n      });\n    };\n\n    this.handleYes = () => {\n      switch (this.state.popup) {\n        case messages.reset:\n          this.reset();\n          break;\n\n        case messages.deleteDone:\n          this.deleteDone();\n          break;\n\n        case messages.clear:\n          this.clear();\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        show: this.state.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        type: this.state.popup,\n        onCancel: this.handlePopupCancle,\n        onYes: this.handleYes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        inactive: this.state.popup.length > 0 || this.state.login,\n        numTasks: this.state.tasks.length,\n        numDoneTasks: this.state.tasks.filter(t => t.checked).length,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset,\n        onDeleteDone: this.handleDeleteDone,\n        onClear: this.handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: this.state.tasks,\n        onDelete: this.handleDelete,\n        onToggle: this.handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jakes/Documents/semester 7/To-Do/frontend/src/App.tsx"],"names":["React","Axios","Tasks","NavBar","Popup","messages","Login","App","Component","state","tasks","popup","none","login","componentDidMount","username","localStorage","getItem","get","then","response","setState","data","maxId","reduce","max","character","id","handleAdd","text","newTask","description","checked","push","post","handleReset","reset","forEach","t","put","handleDeleteDone","deleteDone","filter","delete","handleClear","clear","handleDelete","handleToggle","handlePopupCancle","handleYes","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport { TaskTemplate } from \"./components/task\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\";\nimport Login from \"./components/login\";\n//\ninterface AppState {\n    tasks: TaskTemplate[];\n    popup: messages;\n    login: boolean;\n}\n\nclass App extends React.Component {\n    state: AppState = {\n        tasks: [],\n        popup: messages.none,\n        login: true,\n    };\n\n    componentDidMount = () => {\n        const username = localStorage.getItem(\"user\");\n        if (username === \"admin\") {\n            Axios.get(\"http://localhost:3001/api/get\").then(response => {\n                this.setState({ tasks: response.data });\n            });\n        }\n    };\n\n    maxId = (): number => {\n        return this.state.tasks.reduce(\n            (max, character) => (character.id > max ? character.id : max),\n            0\n        );\n    };\n\n    handleAdd = async (text: string) => {\n        if (text) {\n            const tasks = [...this.state.tasks];\n            const newTask: TaskTemplate = {\n                id: this.maxId() + 1,\n                description: text,\n                checked: false,\n            };\n            tasks.push(newTask);\n            await Axios.post(\"http://localhost:3001/api/add\", newTask);\n            this.setState({ tasks });\n        }\n    };\n\n    handleReset = (): void => {\n        this.setState({\n            popup: messages.reset,\n        });\n    };\n\n    reset = async () => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            t.checked = false;\n        });\n        await Axios.put(\"http://localhost:3001/api/reset\");\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleDeleteDone = (): void => {\n        this.setState({\n            popup: messages.deleteDone,\n        });\n    };\n\n    deleteDone = async () => {\n        const tasks = this.state.tasks.filter(t => !t.checked);\n        await Axios.delete(\"http://localhost:3001/api/deleteDone\");\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleClear = (): void => {\n        this.setState({\n            popup: messages.clear,\n        });\n    };\n\n    clear = async () => {\n        await Axios.delete(\"http://localhost:3001/api/clear\");\n        this.setState({ tasks: [], popup: messages.none });\n    };\n\n    handleDelete = async (id: number) => {\n        const tasks = this.state.tasks.filter(t => t.id !== id);\n        await Axios.delete(\"http://localhost:3001/api/delete\", {\n            data: { id: id },\n        });\n        this.setState({ tasks });\n    };\n\n    handleToggle = async (id: number) => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            if (t.id === id) t.checked = !t.checked;\n        });\n        await Axios.put(\"http://localhost:3001/api/toggle\", { id: id });\n        this.setState({ tasks });\n    };\n\n    handlePopupCancle = (): void => {\n        this.setState({ popup: messages.none });\n    };\n\n    handleYes = (): void => {\n        switch (this.state.popup) {\n            case messages.reset:\n                this.reset();\n                break;\n            case messages.deleteDone:\n                this.deleteDone();\n                break;\n            case messages.clear:\n                this.clear();\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Login show={this.state.login}></Login>\n                <Popup\n                    type={this.state.popup}\n                    onCancel={this.handlePopupCancle}\n                    onYes={this.handleYes}\n                ></Popup>\n                <NavBar\n                    inactive={this.state.popup.length > 0 || this.state.login}\n                    numTasks={this.state.tasks.length}\n                    numDoneTasks={\n                        this.state.tasks.filter(t => t.checked).length\n                    }\n                    onAdd={this.handleAdd}\n                    onReset={this.handleReset}\n                    onDeleteDone={this.handleDeleteDone}\n                    onClear={this.handleClear}\n                />\n                <Tasks\n                    tasks={this.state.tasks}\n                    onDelete={this.handleDelete}\n                    onToggle={this.handleToggle}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}