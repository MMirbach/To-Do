{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakes\\\\Documents\\\\semester 7\\\\To-Do\\\\frontend\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentText: \"\",\n      popup: messages.none\n    };\n\n    this.componentDidMount = () => {\n      Axios.post(\"http://localhost:3001/api/get\").then(response => {\n        this.setState({\n          tasks: response.data\n        });\n      });\n    };\n\n    this.maxId = () => {\n      return this.state.tasks.reduce((max, character) => character.id > max ? character.id : max, 0);\n    };\n\n    this.handleText = currentText => {\n      this.setState({\n        currentText\n      });\n    };\n\n    this.handleAdd = () => {\n      if (this.state.currentText) {\n        const tasks = [...this.state.tasks];\n        const newTask = {\n          id: this.maxId() + 1,\n          description: this.state.currentText,\n          checked: false\n        };\n        tasks.push(newTask);\n        Axios.post(\"http://localhost:3001/api/add\", newTask);\n        this.setState({\n          tasks: tasks,\n          currentText: \"\"\n        });\n      }\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        popup: messages.reset\n      });\n    };\n\n    this.reset = () => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        t.checked = false;\n      });\n      Axios.post(\"http://localhost:3001/api/reset\");\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleDeleteDone = () => {\n      this.setState({\n        popup: messages.deleteDone\n      });\n    };\n\n    this.deleteDone = () => {\n      const tasks = this.state.tasks.filter(t => !t.checked);\n      Axios.post(\"http://localhost:3001/api/deleteDone\");\n      this.setState({\n        tasks: tasks,\n        popup: messages.none\n      });\n    };\n\n    this.handleClear = () => {\n      this.setState({\n        popup: messages.clear\n      });\n    };\n\n    this.clear = () => {\n      Axios.post(\"http://localhost:3001/api/clear\");\n      this.setState({\n        tasks: [],\n        popup: messages.none\n      });\n    };\n\n    this.handleDelete = id => {\n      const tasks = this.state.tasks.filter(t => t.id !== id);\n      Axios.post(\"http://localhost:3001/api/delete\", {\n        id: id\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handleToggle = id => {\n      const tasks = [...this.state.tasks];\n      tasks.forEach(t => {\n        if (t.id === id) t.checked = !t.checked;\n      });\n      Axios.post(\"http://localhost:3001/api/toggle\", {\n        id: id\n      });\n      this.setState({\n        tasks\n      });\n    };\n\n    this.handlePopupCancle = () => {\n      this.setState({\n        popup: messages.none\n      });\n    };\n\n    this.handleYes = () => {\n      switch (this.state.popup) {\n        case messages.reset:\n          this.reset();\n          break;\n\n        case messages.deleteDone:\n          this.deleteDone();\n          break;\n\n        case messages.clear:\n          this.clear();\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Popup, {\n        type: this.state.popup,\n        onCancel: this.handlePopupCancle,\n        onYes: this.handleYes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n        value: this.state.currentText,\n        numTasks: this.state.tasks.length,\n        numDoneTasks: this.state.tasks.filter(t => t.checked).length,\n        onText: this.handleText,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset,\n        onDeleteDone: this.handleDeleteDone,\n        onClear: this.handleClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: this.state.tasks,\n        onDelete: this.handleDelete,\n        onToggle: this.handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jakes/Documents/semester 7/To-Do/frontend/src/App.tsx"],"names":["React","Axios","Tasks","NavBar","Popup","messages","App","Component","state","tasks","currentText","popup","none","componentDidMount","post","then","response","setState","data","maxId","reduce","max","character","id","handleText","handleAdd","newTask","description","checked","push","handleReset","reset","forEach","t","handleDeleteDone","deleteDone","filter","handleClear","clear","handleDelete","handleToggle","handlePopupCancle","handleYes","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/App.css\";\nimport Axios from \"axios\";\nimport { TaskTemplate } from \"./components/task\";\nimport Tasks from \"./components/tasks\";\nimport NavBar from \"./components/navbar\";\nimport Popup, { messages } from \"./components/popup\";\n//\ninterface AppState {\n    tasks: TaskTemplate[];\n    currentText: string;\n    popup: messages;\n}\n\nclass App extends React.Component {\n    state: AppState = {\n        tasks: [],\n        currentText: \"\",\n        popup: messages.none,\n    };\n\n    componentDidMount = () => {\n        Axios.post(\"http://localhost:3001/api/get\").then(response => {\n            this.setState({ tasks: response.data });\n        });\n    };\n\n    maxId = (): number => {\n        return this.state.tasks.reduce(\n            (max, character) => (character.id > max ? character.id : max),\n            0\n        );\n    };\n\n    handleText = (currentText: string): void => {\n        this.setState({ currentText });\n    };\n\n    handleAdd = (): void => {\n        if (this.state.currentText) {\n            const tasks = [...this.state.tasks];\n            const newTask: TaskTemplate = {\n                id: this.maxId() + 1,\n                description: this.state.currentText,\n                checked: false,\n            };\n            tasks.push(newTask);\n            Axios.post(\"http://localhost:3001/api/add\", newTask);\n            this.setState({ tasks: tasks, currentText: \"\" });\n        }\n    };\n\n    handleReset = (): void => {\n        this.setState({\n            popup: messages.reset,\n        });\n    };\n\n    reset = (): void => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            t.checked = false;\n        });\n        Axios.post(\"http://localhost:3001/api/reset\");\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleDeleteDone = (): void => {\n        this.setState({\n            popup: messages.deleteDone,\n        });\n    };\n\n    deleteDone = (): void => {\n        const tasks = this.state.tasks.filter(t => !t.checked);\n        Axios.post(\"http://localhost:3001/api/deleteDone\");\n        this.setState({ tasks: tasks, popup: messages.none });\n    };\n\n    handleClear = (): void => {\n        this.setState({\n            popup: messages.clear,\n        });\n    };\n\n    clear = () => {\n        Axios.post(\"http://localhost:3001/api/clear\");\n        this.setState({ tasks: [], popup: messages.none });\n    };\n\n    handleDelete = (id: number): void => {\n        const tasks = this.state.tasks.filter(t => t.id !== id);\n        Axios.post(\"http://localhost:3001/api/delete\", { id: id });\n        this.setState({ tasks });\n    };\n\n    handleToggle = (id: number): void => {\n        const tasks = [...this.state.tasks];\n        tasks.forEach(t => {\n            if (t.id === id) t.checked = !t.checked;\n        });\n        Axios.post(\"http://localhost:3001/api/toggle\", { id: id });\n        this.setState({ tasks });\n    };\n\n    handlePopupCancle = (): void => {\n        this.setState({ popup: messages.none });\n    };\n\n    handleYes = (): void => {\n        switch (this.state.popup) {\n            case messages.reset:\n                this.reset();\n                break;\n            case messages.deleteDone:\n                this.deleteDone();\n                break;\n            case messages.clear:\n                this.clear();\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Popup\n                    type={this.state.popup}\n                    onCancel={this.handlePopupCancle}\n                    onYes={this.handleYes}\n                ></Popup>\n                <NavBar\n                    value={this.state.currentText}\n                    numTasks={this.state.tasks.length}\n                    numDoneTasks={\n                        this.state.tasks.filter(t => t.checked).length\n                    }\n                    onText={this.handleText}\n                    onAdd={this.handleAdd}\n                    onReset={this.handleReset}\n                    onDeleteDone={this.handleDeleteDone}\n                    onClear={this.handleClear}\n                />\n                <Tasks\n                    tasks={this.state.tasks}\n                    onDelete={this.handleDelete}\n                    onToggle={this.handleToggle}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}